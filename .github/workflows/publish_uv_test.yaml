

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Upload Python Package (TestPyPI)

on:
  # workflow_dispatch:
  # release:
  #   types: [published]
  push:
    tags:
      - "v*.*.*"  # Runs only on version tags

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4


      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest

    needs:
      - release-build

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: testpypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://test.pypi.org/project/test_workflow

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Publish release distributions to PyPI
        run: uv publish --trusted-publishing always --publish-url https://test.pypi.org/legacy/

