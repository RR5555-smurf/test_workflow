

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Upload Python Package (TestPyPI)

on:
  release:
    types: [published]


permissions:
  contents: read

jobs:

  pypi-publish:
    runs-on: ubuntu-latest

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: testpypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://test.pypi.org/project/rr_test_workflow


    steps:

      - name: Get run ID of "Build pkg & Create release" workflow
        id: get-run-id
        run: |
          echo ${{ github.repository }}
          echo "${{ github.repository }}/tree/${{ github.ref_name }}"
          OTHER_REPO="${{ github.repository }}/tree/${{ github.ref_name }}"
          WF_NAME="release_uv.yaml"
          RUN_ID=`gh run --repo ${OTHER_REPO} list --workflow ${WF_NAME} --json databaseId --jq .[0].databaseId`
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GH_ARTIFACT }}


      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GH_ARTIFACT }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}
          name: release-dists
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Publish release distributions to PyPI
        run: uv publish --trusted-publishing always --publish-url https://test.pypi.org/legacy/

